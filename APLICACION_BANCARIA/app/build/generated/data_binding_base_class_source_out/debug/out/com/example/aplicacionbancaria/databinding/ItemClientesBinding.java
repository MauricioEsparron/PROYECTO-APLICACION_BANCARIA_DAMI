// Generated by view binder compiler. Do not edit!
package com.example.aplicacionbancaria.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aplicacionbancaria.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemClientesBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView labelDireccion;

  @NonNull
  public final TextView labelDni;

  @NonNull
  public final TextView labelNombre;

  @NonNull
  public final TextView labelTelefono;

  @NonNull
  public final TextView txtApellido;

  @NonNull
  public final TextView txtDireccion;

  @NonNull
  public final TextView txtDni;

  @NonNull
  public final TextView txtNombre;

  @NonNull
  public final TextView txtTelefono;

  private ItemClientesBinding(@NonNull MaterialCardView rootView, @NonNull TextView labelDireccion,
      @NonNull TextView labelDni, @NonNull TextView labelNombre, @NonNull TextView labelTelefono,
      @NonNull TextView txtApellido, @NonNull TextView txtDireccion, @NonNull TextView txtDni,
      @NonNull TextView txtNombre, @NonNull TextView txtTelefono) {
    this.rootView = rootView;
    this.labelDireccion = labelDireccion;
    this.labelDni = labelDni;
    this.labelNombre = labelNombre;
    this.labelTelefono = labelTelefono;
    this.txtApellido = txtApellido;
    this.txtDireccion = txtDireccion;
    this.txtDni = txtDni;
    this.txtNombre = txtNombre;
    this.txtTelefono = txtTelefono;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemClientesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemClientesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_clientes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemClientesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.labelDireccion;
      TextView labelDireccion = ViewBindings.findChildViewById(rootView, id);
      if (labelDireccion == null) {
        break missingId;
      }

      id = R.id.labelDni;
      TextView labelDni = ViewBindings.findChildViewById(rootView, id);
      if (labelDni == null) {
        break missingId;
      }

      id = R.id.labelNombre;
      TextView labelNombre = ViewBindings.findChildViewById(rootView, id);
      if (labelNombre == null) {
        break missingId;
      }

      id = R.id.labelTelefono;
      TextView labelTelefono = ViewBindings.findChildViewById(rootView, id);
      if (labelTelefono == null) {
        break missingId;
      }

      id = R.id.txtApellido;
      TextView txtApellido = ViewBindings.findChildViewById(rootView, id);
      if (txtApellido == null) {
        break missingId;
      }

      id = R.id.txtDireccion;
      TextView txtDireccion = ViewBindings.findChildViewById(rootView, id);
      if (txtDireccion == null) {
        break missingId;
      }

      id = R.id.txtDni;
      TextView txtDni = ViewBindings.findChildViewById(rootView, id);
      if (txtDni == null) {
        break missingId;
      }

      id = R.id.txtNombre;
      TextView txtNombre = ViewBindings.findChildViewById(rootView, id);
      if (txtNombre == null) {
        break missingId;
      }

      id = R.id.txtTelefono;
      TextView txtTelefono = ViewBindings.findChildViewById(rootView, id);
      if (txtTelefono == null) {
        break missingId;
      }

      return new ItemClientesBinding((MaterialCardView) rootView, labelDireccion, labelDni,
          labelNombre, labelTelefono, txtApellido, txtDireccion, txtDni, txtNombre, txtTelefono);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
